{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{fetchKickStarterProjects}from\"./utils/fetchProjects\";import{PROJECTS_PER_PAGE}from\"./constants/commonConstants\";import ProjectTable from\"./components/ProjectTable\";import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[projects,setProjects]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[projectsPerPage,setProjectsPerPage]=useState(PROJECTS_PER_PAGE);useEffect(()=>{const fetchData=async()=>{try{const data=await fetchKickStarterProjects();setProjects(data);}catch(error){setProjects([]);}};fetchData();},[]);const indexOfLastProject=currentPage*projectsPerPage;const indexOfFirstProject=indexOfLastProject-projectsPerPage;const currentProjects=projects.slice(indexOfFirstProject,indexOfLastProject);const totalPages=Math.ceil(projects.length/projectsPerPage);const handlePageChange=page=>{setCurrentPage(page);};const handleProjectsPerPageChange=event=>{setProjectsPerPage(Number(event.target.value));setCurrentPage(1);// Reset to the first page when the number of rows per page changes\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"projects\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"projects__title\",children:\"\\\"Kickstarter Projects!\\\"\"}),/*#__PURE__*/_jsx(ProjectTable,{projects:currentProjects,currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange,projectsPerPage:projectsPerPage,onRowsPerPageChange:handleProjectsPerPageChange})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","fetchKickStarterProjects","PROJECTS_PER_PAGE","ProjectTable","jsx","_jsx","jsxs","_jsxs","App","projects","setProjects","currentPage","setCurrentPage","projectsPerPage","setProjectsPerPage","fetchData","data","error","indexOfLastProject","indexOfFirstProject","currentProjects","slice","totalPages","Math","ceil","length","handlePageChange","page","handleProjectsPerPageChange","event","Number","target","value","className","children","onPageChange","onRowsPerPageChange"],"sources":["/Users/mohitsood/Desktop/Assignment/frontend-assignment/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchKickStarterProjects } from \"./utils/fetchProjects\";\nimport { PROJECTS_PER_PAGE } from \"./constants/commonConstants\";\nimport ProjectTable from \"./components/ProjectTable\";\nimport './App.css';\n\nconst App = () => {\n    const [projects, setProjects] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [projectsPerPage, setProjectsPerPage] = useState(PROJECTS_PER_PAGE);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await fetchKickStarterProjects();\n                setProjects(data);\n            } catch (error) {\n                setProjects([]);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const indexOfLastProject = currentPage * projectsPerPage;\n    const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n    const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n    const totalPages = Math.ceil(projects.length / projectsPerPage);\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const handleProjectsPerPageChange = (event) => {\n        setProjectsPerPage(Number(event.target.value));\n        setCurrentPage(1); // Reset to the first page when the number of rows per page changes\n    };\n\n\n    return (\n        <div className=\"projects\">\n            <h1 className=\"projects__title\">\"Kickstarter Projects!\"</h1>\n            <ProjectTable\n                projects={currentProjects}\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={handlePageChange}\n                projectsPerPage={projectsPerPage}\n                onRowsPerPageChange={handleProjectsPerPageChange}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,wBAAwB,KAAQ,uBAAuB,CAChE,OAASC,iBAAiB,KAAQ,6BAA6B,CAC/D,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAACE,iBAAiB,CAAC,CAEzEH,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAgB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAf,wBAAwB,CAAC,CAAC,CAC7CS,WAAW,CAACM,IAAI,CAAC,CACrB,CAAE,MAAOC,KAAK,CAAE,CACZP,WAAW,CAAC,EAAE,CAAC,CACnB,CACJ,CAAC,CAEDK,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,kBAAkB,CAAGP,WAAW,CAAGE,eAAe,CACxD,KAAM,CAAAM,mBAAmB,CAAGD,kBAAkB,CAAGL,eAAe,CAChE,KAAM,CAAAO,eAAe,CAAGX,QAAQ,CAACY,KAAK,CAACF,mBAAmB,CAAED,kBAAkB,CAAC,CAE/E,KAAM,CAAAI,UAAU,CAAGC,IAAI,CAACC,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAAGZ,eAAe,CAAC,CAE/D,KAAM,CAAAa,gBAAgB,CAAIC,IAAI,EAAK,CAC/Bf,cAAc,CAACe,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,2BAA2B,CAAIC,KAAK,EAAK,CAC3Cf,kBAAkB,CAACgB,MAAM,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAC9CpB,cAAc,CAAC,CAAC,CAAC,CAAE;AACvB,CAAC,CAGD,mBACIL,KAAA,QAAK0B,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB7B,IAAA,OAAI4B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,2BAAuB,CAAI,CAAC,cAC5D7B,IAAA,CAACF,YAAY,EACTM,QAAQ,CAAEW,eAAgB,CAC1BT,WAAW,CAAEA,WAAY,CACzBW,UAAU,CAAEA,UAAW,CACvBa,YAAY,CAAET,gBAAiB,CAC/Bb,eAAe,CAAEA,eAAgB,CACjCuB,mBAAmB,CAAER,2BAA4B,CACpD,CAAC,EACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAApB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}